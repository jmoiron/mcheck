use super::CaveSurface
use super::VerticalAnchor
use ::java::util::block_state::BlockState

struct SurfaceRule {
	type: #[id="worldgen/material_rule"] string,
	...minecraft:surface_rule[[type]],
}

dispatch minecraft:surface_rule[block] to struct BlockRule {
	result_state: BlockState,
}

dispatch minecraft:surface_rule[condition] to struct ConditionRule {
	if_true: SurfaceCondition,
	then_run: SurfaceRule,
}

dispatch minecraft:surface_rule[sequence] to struct SequenceRule {
	sequence: [SurfaceRule],
}

struct SurfaceCondition {
	type: #[id="worldgen/material_condition"] string,
	...minecraft:surface_condition[[type]],
}

dispatch minecraft:surface_condition[biome] to struct BiomeCondition {
	biome_is: [#[id="worldgen/biome"] string],
}

dispatch minecraft:surface_condition[noise_threshold] to struct NoiseThresholdCondition {
	noise: #[id="worldgen/noise"] string,
	min_threshold: float,
	max_threshold: float,
}

dispatch minecraft:surface_condition[not] to struct NotCondition {
	invert: SurfaceCondition,
}

dispatch minecraft:surface_condition[stone_depth] to struct StoneDepthCondition {
	offset: int,
	surface_type: CaveSurface,
	add_surface_depth: boolean,
	#[until="1.18.2"]
	add_surface_secondary_depth: boolean,
	#[since="1.18.2"]
	secondary_depth_range: int,
}

dispatch minecraft:surface_condition[vertical_gradient] to struct VerticalGradientCondition {
	random_name: string,
	true_at_and_below: VerticalAnchor,
	false_at_and_above: VerticalAnchor,
}

dispatch minecraft:surface_condition[water] to struct WaterCondition {
	offset: int,
	surface_depth_multiplier: int @ -20..20,
	add_stone_depth: boolean,
}

dispatch minecraft:surface_condition[y_above] to struct YAboveCondition {
	anchor: VerticalAnchor,
	surface_depth_multiplier: int @ -20..20,
	add_stone_depth: boolean,
}
